#!/bin/bash
#
# Slackware build script for runc
#
# Copyright 2016 Asaf Ohayon <asaf@sysbind.co.il>
# Copyright 2017-2018 Audrius KaÅ¾ukauskas <audrius@neutrino.lt>
# Copyright 2019-2021 Corrado Franco (https://corradofranco.it)
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program
# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License along
# with this program (most likely, a file named COPYING).  If not, see
# <http://www.gnu.org/licenses/>.
#
# Latest version of this SlackBuild at https://github.com/conraid/SlackBuilds

set -eu

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=runc
SRCVERSION=1.0.2
VERSION=$(echo $SRCVERSION | tr - _)
COMMIT=84113eef6fc27af1b01b3181f31bbaf708715301
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

DOCFILES="LICENSE MAINTAINERS NOTICE VERSION *.md"

if [ -z ${ARCH:=""} ]; then
  case "$( uname -m )" in
    i?86) ARCH=i686 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME:-""}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz "
  exit 0
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PKGNAM-$SRCVERSION
tar xvf $CWD/$PKGNAM-$SRCVERSION.tar.gz
cd $PKGNAM-$SRCVERSION

chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

# Apply patches
if [ -e $CWD/patches ]; then
  for PATCH in $CWD/patches/*.patch; do
    patch -p1 -i $PATCH
  done
fi

export GOROOT="/usr/lib${LIBDIRSUFFIX}/go"
export PATH="${GOROOT}/bin:${PATH}"
export BUILDTAGS='seccomp apparmor'
export CGO_CPPFLAGS="${SLKCFLAGS}"
export CGO_CFLAGS="${SLKCFLAGS}"
export CGO_CXXFLAGS="${SLKCFLAGS}"
export GOFLAGS="-trimpath -mod=readonly -modcacherw"


# Do not try to get git commit hash, we're not inside git repository.
sed -e '/^COMMIT/d' -e '/^GIT_BRANCH/d' -i Makefile

make COMMIT=$COMMIT runc man

make install BINDIR=$PKG/usr/bin
make install-bash PREFIX=$PKG/usr
make install-man PREFIX=$PKG/usr MANDIR=$PKG/usr/man

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

if [ -d $PKG/usr/man ]; then
  find $PKG/usr/man -type f -exec chmod 644 {} \; -exec gzip -9 {} \;
  for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a $DOCFILES $PKG/usr/doc/$PKGNAM-$VERSION || true
cat $CWD/$PKGNAM.SlackBuild > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
