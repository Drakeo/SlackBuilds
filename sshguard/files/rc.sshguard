#!/bin/bssh
# Startup script for sshguard
# Based on init debian script

DAEMON_ARGS=""

# Read configuration variable file if it is present
[ -f /etc/sshguard/sshguard.conf ] && . /etc/sshguard/sshguard.conf

BLACKLIST="/var/db/sshguard/blacklist.db"
DAEMON_ARGS="$DAEMON_ARGS -b $BLACKLIST"

PIDFILE="/var/run/sshguard.pid"
DAEMON_ARGS="$DAEMON_ARGS -i $PIDFILE"

# Add logfiles to be monitored to list passed to daemon
LOGS=0
for logfile in $LOGFILES; do [ -r "$logfile" ] && DAEMON_ARGS="$DAEMON_ARGS -l $logfile" && LOGS=$((LOGS+1)); done
[ $LOGS = 0 ] && echo "No valid logs to scan by sshguard, exiting" && exit 0

# Added whitelist file and other options

DAEMON_ARGS="$DAEMON_ARGS -w $WHITELIST $ARGS"

# Enabling and disabling firewall

enable_firewall() {
    echo -n "enabling firewall... "
    # creating sshguard chain
    iptables -N sshguard 2> /dev/null
    ip6tables -N sshguard 2> /dev/null
    # block traffic from abusers
    iptables -I INPUT -j sshguard 2> /dev/null
    ip6tables -I INPUT -j sshguard 2> /dev/null
    echo " OK"
}

disable_firewall() {
    echo -n "disabling firewall... "
    # flushes list
    iptables -F sshguard 2> /dev/null
    ip6tables -F sshguard 2> /dev/null
    # removes rules
    iptables -D INPUT -j sshguard 2> /dev/null
    ip6tables -D INPUT -j sshguard 2> /dev/null
    # removing chain
    iptables -X sshguard 2> /dev/null
    ip6tables -X sshguard 2> /dev/null
    echo " OK"
}


case $1 in
	'start')
		if [ "$ENABLE_FIREWALL" = "1" ]; then
		    enable_firewall
		fi
		echo -n "Starting sshguard..."
		/usr/sbin/sshguard $DAEMON_ARGS >& /dev/null &
		echo "OK"
		;;
	'stop')
		echo -n "Stopping sshguard..."
		kill $(pidof sshguard) &> /dev/null
		echo "OK"
  	        if [ "$ENABLE_FIREWALL" = "1" ]; then
		    disable_firewall
		fi
		;;
	*)
		echo "usage: $0 {start|stop}"
		;;
esac
