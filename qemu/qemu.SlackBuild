#!/bin/bash

# Slackware build script for qemu
# Copyright 2015-2021 Corrado Franco (https://corradofranco.it)
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program
# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License along
# with this program (most likely, a file named COPYING).  If not, see
# <http://www.gnu.org/licenses/>.
#
# Latest version of this SlackBuild at https://github.com/conraid/SlackBuilds

set -eu

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=qemu
SRCVERSION=6.1.0
VERSION=$(echo $SRCVERSION | tr - _)
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

DOCFILES="CODING_STYLE COPYING* Changelog HACKING LICENSE MAINTAINERS README docs/*"

if [ -z ${ARCH:=""} ]; then
  case "$( uname -m )" in
  i?86) ARCH=i586 ;;
  arm*) ARCH=arm ;;
  *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME:-""}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-${BUILD}${TAG}.txz"
  exit 0
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PKGNAM-$SRCVERSION
tar xvf $CWD/$PKGNAM-$SRCVERSION.tar.xz
cd $PKGNAM-$SRCVERSION
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

# Apply patches
if [ -e $CWD/patches ]; then
  if [ -e $CWD/patches/series ]; then
    for PATCH in $(cat $CWD/patches/series); do
      patch -p1 -i $CWD/patches/$PATCH
    done
  else
    for PATCH in $CWD/patches/*.patch; do
      patch -p1 -i $PATCH
    done
  fi
fi

# Remove double CFLAGS
sed "s|^\ \ CFLAGS=\"-O2\ |  CFLAGS=\"|" -i configure

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
ARFLAGS="rv" \
./configure \
  --extra-cflags="$SLKCFLAGS" \
  --extra-cxxflags="$SLKCFLAGS" \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --docdir=/usr/doc/$PKGNAM-$VERSION \
  --mandir=/usr/man \
  --infodir=/usr/info \
  --enable-system \
  --enable-user \
  --enable-linux-user \
  --enable-guest-agent \
  --disable-docs \
  --enable-modules \
  --disable-debug-info \
  --enable-gnutls \
  --enable-sdl \
  --enable-gtk \
  --enable-curses \
  --enable-vnc \
  --enable-vnc-sasl \
  --enable-vnc-jpeg \
  --enable-vnc-png \
  --enable-virtfs \
  --enable-curl \
  --enable-kvm \
  --enable-vde \
  --enable-cap-ng \
  --enable-attr \
  --enable-lzo \
  --enable-bzip2 \
  --enable-seccomp \
  --disable-tpm \
  --enable-libssh \
  --enable-vte \
  --enable-jemalloc \
  --enable-nettle \
  --enable-virglrenderer \
  --enable-spice \
  --enable-smartcard \
  --enable-fdt \
  --enable-libnfs \
  --enable-xfsctl \
  --enable-linux-io-uring \
  --enable-plugins \
  --audio-drv-list="alsa sdl pa" \
  --target-list="x86_64-softmmu,x86_64-linux-user"

make
make DESTDIR="$PKG" install
cd ..

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find $PKG | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip -g 2> /dev/null || true

# Remove empty dir
rm -rf $PKG/var

# bridge_helper needs suid. Thanks to Archlinux
chmod u+s $PKG/usr/libexec/qemu-bridge-helper

# install some udev rules for /dev/kvm. Thanks to SBo and Archlinux
install -Dm644 $CWD/files/65-kvm.rules $PKG/lib/udev/rules.d/65-kvm.rules

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a $DOCFILES $PKG/usr/doc/$PKGNAM-$VERSION || true
cat $CWD/$PKGNAM.SlackBuild > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
echo "8"
cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
