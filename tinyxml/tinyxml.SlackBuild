#!/bin/bash
#
# Slackware build script for tinyxml
#
# Copyright 2012-2020 Corrado Franco (https://corradofranco.it)
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program
# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License along
# with this program (most likely, a file named COPYING).  If not, see
# <http://www.gnu.org/licenses/>.
#
# Latest version of this SlackBuild at https://github.com/conraid/SlackBuilds
#
set -eu

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=tinyxml
SRCVERSION=${VERSION:-2_6_2}
VERSION=$(echo $SRCVERSION | tr _ .)
BUILD=${BUILD:-5}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

DOCFILES="*.txt"

if [ -z ${ARCH:=""} ]; then
  case "$( uname -m )" in
    i?86) ARCH=i686 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME:-""}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-${BUILD}${TAG}.txz"
  exit 0
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PKGNAM
tar xvf $CWD/${PKGNAM}_${SRCVERSION}.tar.gz
cd $PKGNAM

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Apply patches
if [ -e $CWD/patches ]; then
  for PATCH in $CWD/patches/*.patch; do
    patch -p1 -i $PATCH
  done
fi

# Fix Makefile
sed -e '/^TINYXML_USE_STL/ s/=.*/=YES/' \
    -e "s/^RELEASE_CFLAGS.*/& $SLKCFLAGS -fPIC/" -i Makefile

make
g++ -fPIC -v $SLKCFLAGS -Wall -Wno-unknown-pragmas -Wno-format -shared -o \
  lib${PKGNAM}.so.0.$VERSION -Wl,-soname,lib${PKGNAM}.so.0 *.o

install -dm755 $PKG/usr/{lib${LIBDIRSUFFIX},include}
install -m755 lib${PKGNAM}.so.0.$VERSION $PKG/usr/lib${LIBDIRSUFFIX}
install -m644 $PKGNAM.h tinystr.h $PKG/usr/include/
( cd $PKG/usr/lib${LIBDIRSUFFIX}
  ln -s lib${PKGNAM}.so.0.$VERSION lib${PKGNAM}.so.0
  ln -s lib${PKGNAM}.so.0.$VERSION lib${PKGNAM}.so )

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find $PKG | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip -g 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a $DOCFILES $PKG/usr/doc/$PKGNAM-$VERSION || true
cat $CWD/$PKGNAM.SlackBuild > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild

mkdir -p $PKG/install 
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD${TAG}.txz
